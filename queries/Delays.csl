let scaleUnit = {su};
let startTime = todatetime({start}) - 15min;
let endTime = todatetime({end}) + 15min;
let service = {service};
let hubName = {hub};
let threshold = 10;
let step = totimespan("1m");
let window = totimespan("5m");
let tenant = {locationName};
ProductTrace 
| where PreciseTimeStamp between (startTime .. endTime) 
| where Service =~ service 
| where ScaleUnit =~ scaleUnit 
| where Tracepoint == 15010000 
| where Layer matches regex strcat(hubName, ".*_ActivityDispatcher") 
| extend DbDelay = extract('read from db delay (.*),', 1, Message, typeof(timespan)) 
| extend BufferDelay = extract('buffer read delay (.*)', 1, Message, typeof(timespan)) 
| extend MessageDelayInSeconds = toint((DbDelay + BufferDelay) / 1s)
| join kind=leftouter (ServiceHostAggregated() | where Service =~ service | where HostType == 4 | summarize by HostId, Name)
    on $left.ServiceHost == $right.HostId
| project PreciseTimeStamp, Name, HostId, DbDelay, BufferDelay, MessageDelayInSeconds